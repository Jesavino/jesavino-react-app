{"version":3,"sources":["john_savino.pdf","App.js","reportWebVitals.js","index.js"],"names":["App","useState","numPages","setNumPages","pageNumber","setPageNumber","className","file","jsavino_pdf","onLoadSuccess","type","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","pdfjs","GlobalWorkerOptions","workerSrc","version","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yVAAe,MAA0B,wCCsD1BA,MAhDf,WAAgB,IAAD,EACmBC,mBAAS,MAD5B,mBACNC,EADM,KACIC,EADJ,OAEuBF,mBAAS,GAFhC,mBAENG,EAFM,KAEMC,EAFN,KAmBb,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,4EAGF,qBAAKA,UAAU,eAAf,SACE,eAAC,IAAD,CAAUC,KAAMC,EAAaC,cAtBnC,YAA8C,IAAbP,EAAY,EAAZA,SAC/BC,EAAYD,IAqBR,UACE,cAAC,IAAD,CAAME,WAAYA,IAClB,sBAAKE,UAAU,gBAAf,UACE,yBAAQI,KAAK,SAASC,QArBhC,WACMP,EAAa,GACfC,EAAcD,EAAa,IAmBrB,UACG,IACA,IAAK,OAER,iCACG,IACAA,EAFH,OAEmBF,EAAU,OAE7B,yBAAQQ,KAAK,SAASC,QAxBhC,WACMP,EAAaF,GACfG,EAAcD,EAAa,IAsBrB,UACG,IACA,IAAK,mBCjCLQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAAMC,oBAAoBC,UAA1B,kDAAiFF,IAAMG,QAAvF,kBAEAC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.0d889b28.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/john_savino.b8a61200.pdf\";","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Document, Page } from \"react-pdf\";\n\nimport jsavino_pdf from \"./john_savino.pdf\";\n\nfunction App() {\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n\n  function pageLeft() {\n    if (pageNumber > 1) {\n      setPageNumber(pageNumber - 1);\n    }\n  }\n  function pageRight() {\n    if (pageNumber < numPages) {\n      setPageNumber(pageNumber + 1);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>Welcome to John Savino's Personal Website</p>\n      </header>\n\n      <div className=\"PDF-Document\">\n        <Document file={jsavino_pdf} onLoadSuccess={onDocumentLoadSuccess}>\n          <Page pageNumber={pageNumber} />\n          <div className=\"Page-Controls\">\n            <button type=\"button\" onClick={pageLeft}>\n              {\" \"}\n              {\"<\"}{\" \"}\n            </button>\n            <span>\n              {\" \"}\n              {pageNumber} of {numPages}{\" \"}\n            </span>\n            <button type=\"button\" onClick={pageRight}>\n              {\" \"}\n              {\">\"}{\" \"}\n            </button>\n          </div>\n        </Document>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { pdfjs } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}